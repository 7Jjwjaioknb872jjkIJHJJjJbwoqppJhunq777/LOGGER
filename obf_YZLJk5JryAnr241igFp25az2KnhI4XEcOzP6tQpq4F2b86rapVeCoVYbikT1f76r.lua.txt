local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\230\10","\237\200\36\176\214\213\134\163"),function(v42) if (v9(v42,2)==79) then local v94=0;while true do if (v94==0) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v95=0;local v96;while true do if (v95==0) then v96=v10(v8(v42,16));if v30 then local v121=0;local v122;while true do if (v121==1) then return v122;end if (v121==0) then v122=v13(v96,v30);v30=nil;v121=1;end end else return v96;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v97=0;local v98;while true do if (v97==0) then v98=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + (1 -0))) ;return v98-(v98%1) ;end end else local v99=2^(v44-1) ;return (((v43%(v99 + v99))>=v99) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v51=1;end end end local function v35() local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==3) then if (v61==(619 -(555 + 64))) then if (v60==0) then return v62 * 0 ;else local v123=0;while true do if (v123==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==(931 -(857 + 74))) and (v62 * (1/(568 -(367 + 201))))) or (v62 * NaN) ;end return v16(v62,v61-1023 ) * (v59 + (v60/(2^52))) ;end if (1==v56) then v59=1;v60=(v31(v58,1,20) * (2^(82 -50))) + v57 ;v56=2;end if (v56==0) then v57=v34();v58=v34();v56=1;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end end end local function v36(v63) local v64=0;local v65;local v66;while true do if (v64==1) then v65=v11(v27,v29,(v29 + v63) -1 );v29=v29 + v63 ;v64=2;end if (0==v64) then v65=nil;if  not v63 then local v118=0;while true do if (v118==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=1;end if (v64==3) then return v14(v66);end if (v64==2) then v66={};for v103=1, #v65 do v66[v103]=v10(v9(v11(v65,v103,v103)));end v64=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==1) then v72=v34();v73={};for v105=1,v72 do local v106=0;local v107;local v108;while true do if (v106==1) then if (v107==1) then v108=v32()~=0 ;elseif (v107==2) then v108=v35();elseif (v107==(930 -(214 + 713))) then v108=v36();end v73[v105]=v108;break;end if (v106==0) then v107=v32();v108=nil;v106=1;end end end v71[3]=v32();v67=2;end if (v67==2) then for v109=1,v34() do local v110=0;local v111;while true do if (v110==0) then v111=v32();if (v31(v111,1,1)==0) then local v125=v31(v111,2,1 + 2 );local v126=v31(v111,4,6);local v127={v33(),v33(),nil,nil};if (v125==(1637 -(1523 + 114))) then v127[3]=v33();v127[4]=v33();elseif (v125==1) then v127[3]=v34();elseif (v125==2) then v127[3]=v34() -(2^16) ;elseif (v125==3) then v127[3]=v34() -((2 + 0)^16) ;v127[4]=v33();end if (v31(v126,1 -0 ,1)==1) then v127[2]=v73[v127[2]];end if (v31(v126,2,2)==1) then v127[3]=v73[v127[3]];end if (v31(v126,3,3)==1) then v127[4]=v73[v127[1069 -(68 + 997) ]];end v68[v109]=v127;end break;end end end for v112=1,v34() do v69[v112-(1271 -(226 + 1044)) ]=v39();end return v71;end if (v67==0) then v68={};v69={};v70={};v71={v68,v69,nil,v70};v67=1;end end end local function v40(v74,v75,v76) local v77=v74[1];local v78=v74[2];local v79=v74[12 -9 ];return function(...) local v80=v77;local v81=v78;local v82=v79;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + (118 -(32 + 85)) ];else v90[v100]=v87[v100 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v101=0;while true do if (v101==0) then v92=v80[v84];v93=v92[1];v101=1;end if (v101==1) then if (v93<=45) then if (v93<=22) then if (v93<=10) then if (v93<=4) then if (v93<=1) then if (v93==(0 + 0)) then local v141=v92[2];local v142,v143=v83(v90[v141](v90[v141 + 1 ]));v85=(v143 + v141) -1 ;local v144=0;for v207=v141,v85 do local v208=0;while true do if (v208==0) then v144=v144 + 1 ;v90[v207]=v142[v144];break;end end end else local v145=0;local v146;while true do if (v145==0) then v146=v92[2];do return v21(v90,v146,v85);end break;end end end elseif (v93<=2) then v90[v92[2]]= #v90[v92[3]];elseif (v93>3) then local v223=0;local v224;local v225;local v226;while true do if (v223==0) then v224=v92[2];v225=v90[v224];v223=1;end if (v223==1) then v226=v90[v224 + 2 ];if (v226>0) then if (v225>v90[v224 + 1 ]) then v84=v92[3];else v90[v224 + 3 ]=v225;end elseif (v225<v90[v224 + 1 ]) then v84=v92[3];else v90[v224 + 1 + 2 ]=v225;end break;end end else v90[v92[2]]=v90[v92[960 -(892 + 65) ]]%v92[4] ;end elseif (v93<=7) then if (v93<=5) then local v148=0;local v149;while true do if (0==v148) then v149=v92[2];v90[v149]=v90[v149](v21(v90,v149 + 1 ,v85));break;end end elseif (v93>6) then v90[v92[2]]=v92[3];else do return v90[v92[2]]();end end elseif (v93<=8) then v90[v92[2]]={};elseif (v93>9) then v90[v92[2]][v90[v92[3]]]=v92[9 -5 ];else local v232=v92[2];do return v90[v232](v21(v90,v232 + 1 ,v92[3]));end end elseif (v93<=16) then if (v93<=(23 -10)) then if (v93<=11) then local v151=v92[3 -1 ];v90[v151]=v90[v151]();elseif (v93==12) then v84=v92[3];else v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=14) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>15) then v90[v92[2]]=v90[v92[353 -(87 + 263) ]][v92[4]];else local v238=0;local v239;local v240;local v241;local v242;while true do if (v238==1) then v85=(v241 + v239) -1 ;v242=0 + 0 ;v238=2;end if (v238==0) then v239=v92[2];v240,v241=v83(v90[v239](v21(v90,v239 + 1 ,v92[183 -(67 + 113) ])));v238=1;end if (v238==2) then for v429=v239,v85 do local v430=0;while true do if (v430==0) then v242=v242 + (2 -1) ;v90[v429]=v240[v242];break;end end end break;end end end elseif (v93<=19) then if (v93<=17) then v90[v92[2]]=v90[v92[3]] + v92[3 + 1 ] ;elseif (v93==18) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v92[2]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=20) then local v154=v92[7 -5 ];v90[v154]=v90[v154](v21(v90,v154 + 1 ,v85));elseif (v93==(973 -(802 + 150))) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=33) then if (v93<=27) then if (v93<=24) then if (v93>(61 -38)) then do return v90[v92[2]]();end else local v156=0;local v157;local v158;local v159;while true do if (v156==0) then v157=v92[2];v158=v90[v157];v156=1;end if (v156==1) then v159=v92[3];for v361=1,v159 do v158[v361]=v90[v157 + v361 ];end break;end end end elseif (v93<=25) then if v90[v92[3 -1 ]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>26) then v90[v92[2]][v90[v92[3]]]=v90[v92[4]];else v90[v92[2 + 0 ]]=v75[v92[1000 -(915 + 82) ]];end elseif (v93<=(84 -54)) then if (v93<=28) then v90[v92[2]][v90[v92[2 + 1 ]]]=v90[v92[4]];elseif (v93==29) then v76[v92[3]]=v90[v92[2]];else v90[v92[2 -0 ]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=31) then local v162=0;local v163;local v164;local v165;while true do if (0==v162) then v163=v92[1189 -(1069 + 118) ];v164=v90[v163 + 2 ];v162=1;end if (v162==1) then v165=v90[v163] + v164 ;v90[v163]=v165;v162=2;end if (v162==2) then if (v164>0) then if (v165<=v90[v163 + 1 ]) then local v445=0;while true do if (v445==0) then v84=v92[3];v90[v163 + 3 ]=v165;break;end end end elseif (v165>=v90[v163 + 1 ]) then local v446=0;while true do if (v446==0) then v84=v92[3];v90[v163 + (6 -3) ]=v165;break;end end end break;end end elseif (v93==32) then local v251=0;local v252;local v253;while true do if (v251==0) then v252=v92[2];v253=v90[v252];v251=1;end if (1==v251) then for v431=v252 + 1 ,v92[3] do v15(v253,v90[v431]);end break;end end else v90[v92[2]]={};end elseif (v93<=39) then if (v93<=36) then if (v93<=(73 -39)) then local v166=0;local v167;local v168;local v169;local v170;while true do if (v166==2) then for v364=v167,v85 do v170=v170 + 1 ;v90[v364]=v168[v170];end break;end if (v166==0) then v167=v92[2];v168,v169=v83(v90[v167](v21(v90,v167 + 1 ,v85)));v166=1;end if (1==v166) then v85=(v169 + v167) -1 ;v170=0;v166=2;end end elseif (v93==35) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=(7 + 30)) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==38) then local v258=0;local v259;local v260;local v261;local v262;while true do if (2==v258) then for v432=v259,v85 do local v433=0;while true do if (0==v433) then v262=v262 + 1 ;v90[v432]=v260[v262];break;end end end break;end if (v258==1) then v85=(v261 + v259) -1 ;v262=0;v258=2;end if (v258==0) then v259=v92[2];v260,v261=v83(v90[v259](v21(v90,v259 + (1 -0) ,v92[3])));v258=1;end end else local v263=0;local v264;local v265;while true do if (v263==1) then v90[v264 + 1 ]=v265;v90[v264]=v265[v92[4]];break;end if (v263==0) then v264=v92[2];v265=v90[v92[3]];v263=1;end end end elseif (v93<=42) then if (v93<=(40 + 0)) then local v171=0;local v172;while true do if (v171==0) then v172=v92[2];v90[v172]=v90[v172](v21(v90,v172 + 1 ,v92[3]));break;end end elseif (v93==41) then do return;end else v84=v92[3];end elseif (v93<=43) then local v173=0;local v174;local v175;local v176;while true do if (v173==0) then v174=v81[v92[3]];v175=nil;v173=1;end if (v173==1) then v176={};v175=v18({},{[v7("\146\137\221\250\169\179\204","\148\205\214\180")]=function(v367,v368) local v369=0;local v370;while true do if (v369==0) then v370=v176[v368];return v370[1][v370[2]];end end end,[v7("\27\73\28\248\34\61\245\82\33\110","\54\68\22\114\157\85\84\155")]=function(v371,v372,v373) local v374=0;local v375;while true do if (v374==0) then v375=v176[v372];v375[1][v375[2]]=v373;break;end end end});v173=2;end if (v173==2) then for v376=792 -(368 + 423) ,v92[4] do v84=v84 + 1 ;local v377=v80[v84];if (v377[1]==91) then v176[v376-(3 -2) ]={v90,v377[21 -(10 + 8) ]};else v176[v376-1 ]={v75,v377[3]};end v89[ #v89 + 1 ]=v176;end v90[v92[2]]=v40(v174,v175,v76);break;end end elseif (v93==(169 -125)) then local v267=0;local v268;local v269;local v270;while true do if (v267==1) then v270=v90[v268 + 2 ];if (v270>0) then if (v269>v90[v268 + 1 ]) then v84=v92[3];else v90[v268 + (445 -(416 + 26)) ]=v269;end elseif (v269<v90[v268 + 1 ]) then v84=v92[3];else v90[v268 + 3 ]=v269;end break;end if (v267==0) then v268=v92[2];v269=v90[v268];v267=1;end end else local v271=0;local v272;while true do if (0==v271) then v272=v92[2];do return v21(v90,v272,v85);end break;end end end elseif (v93<=68) then if (v93<=56) then if (v93<=50) then if (v93<=47) then if (v93>46) then v90[v92[2]]=v90[v92[3]] * v92[4] ;else local v178=0;local v179;local v180;while true do if (v178==0) then v179=v92[2];v180=v90[v179];v178=1;end if (1==v178) then for v379=v179 + 1 ,v85 do v15(v180,v90[v379]);end break;end end end elseif (v93<=48) then if (v92[2]<=v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==49) then local v274=0;local v275;while true do if (v274==0) then v275=v92[2];v90[v275]=v90[v275]();break;end end elseif (v90[v92[2]]~=v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=53) then if (v93<=51) then local v181=0;local v182;while true do if (v181==0) then v182=v92[2];v90[v182]=v90[v182](v90[v182 + 1 ]);break;end end elseif (v93>52) then local v276=0;local v277;local v278;local v279;while true do if (v276==1) then v279=v90[v277] + v278 ;v90[v277]=v279;v276=2;end if (v276==2) then if (v278>0) then if (v279<=v90[v277 + 1 ]) then v84=v92[3];v90[v277 + 3 ]=v279;end elseif (v279>=v90[v277 + 1 ]) then local v464=0;while true do if (v464==0) then v84=v92[3];v90[v277 + 3 ]=v279;break;end end end break;end if (v276==0) then v277=v92[2];v278=v90[v277 + 2 ];v276=1;end end else local v280=0;local v281;while true do if (v280==0) then v281=v92[2];v90[v281](v90[v281 + 1 ]);break;end end end elseif (v93<=(172 -118)) then local v183=v81[v92[3]];local v184;local v185={};v184=v18({},{[v7("\244\44\205\83\242\47\155","\164\171\115\164\61\150\74\227")]=function(v209,v210) local v211=0;local v212;while true do if (v211==0) then v212=v185[v210];return v212[1][v212[2]];end end end,[v7("\60\122\33\252\36\91\92\240\6\93","\148\99\37\79\153\83\50\50")]=function(v213,v214,v215) local v216=v185[v214];v216[1][v216[2]]=v215;end});for v218=1,v92[4] do local v219=0;local v220;while true do if (1==v219) then if (v220[1]==91) then v185[v218-(1 + 0) ]={v90,v220[3]};else v185[v218-1 ]={v75,v220[3]};end v89[ #v89 + (439 -(145 + 293)) ]=v185;break;end if (v219==0) then v84=v84 + 1 ;v220=v80[v84];v219=1;end end end v90[v92[2]]=v40(v183,v184,v76);elseif (v93==55) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else local v283=0;local v284;local v285;while true do if (v283==0) then v284=v92[3];v285=v90[v284];v283=1;end if (v283==1) then for v438=v284 + 1 ,v92[4] do v285=v285   .. v90[v438] ;end v90[v92[2]]=v285;break;end end end elseif (v93<=62) then if (v93<=59) then if (v93<=57) then local v187=0;local v188;while true do if (0==v187) then v188=v92[2];v90[v188]=v90[v188](v90[v188 + 1 ]);break;end end elseif (v93>58) then local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==0) then v287=v92[2];v288,v289=v83(v90[v287](v21(v90,v287 + 1 ,v85)));v286=1;end if (v286==2) then for v439=v287,v85 do local v440=0;while true do if (v440==0) then v290=v290 + 1 ;v90[v439]=v288[v290];break;end end end break;end if (1==v286) then v85=(v289 + v287) -1 ;v290=0;v286=2;end end else do return;end end elseif (v93<=60) then v90[v92[2]]=v90[v92[3]] * v92[4] ;elseif (v93==61) then v76[v92[3]]=v90[v92[2]];else local v293=0;local v294;local v295;while true do if (1==v293) then for v441=v294 + 1 ,v92[4] do v295=v295   .. v90[v441] ;end v90[v92[2]]=v295;break;end if (v293==0) then v294=v92[3];v295=v90[v294];v293=1;end end end elseif (v93<=65) then if (v93<=(493 -(44 + 386))) then v90[v92[2]][v92[3]]=v92[4];elseif (v93==64) then local v296=v92[2];v90[v296]=v90[v296](v21(v90,v296 + 1 ,v92[3]));else local v298=0;local v299;while true do if (v298==0) then v299=v92[2];v90[v299](v90[v299 + (1487 -(998 + 488)) ]);break;end end end elseif (v93<=(21 + 45)) then v90[v92[2]]=v92[3]~=0 ;elseif (v93==67) then local v300=0;local v301;local v302;local v303;local v304;while true do if (1==v300) then v85=(v303 + v301) -1 ;v304=0 + 0 ;v300=2;end if (2==v300) then for v442=v301,v85 do local v443=0;while true do if (v443==0) then v304=v304 + 1 ;v90[v442]=v302[v304];break;end end end break;end if (v300==0) then v301=v92[2];v302,v303=v83(v90[v301](v90[v301 + 1 ]));v300=1;end end elseif (v90[v92[2]]~=v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=80) then if (v93<=74) then if (v93<=71) then if (v93<=69) then local v193=0;local v194;while true do if (v193==0) then v194=v92[2];v90[v194](v21(v90,v194 + 1 ,v85));break;end end elseif (v93>70) then v90[v92[2]]=v92[3]~=(772 -(201 + 571)) ;else v90[v92[2]]=v90[v92[3]];end elseif (v93<=72) then v90[v92[2]]=v92[3];elseif (v93==73) then v90[v92[1140 -(116 + 1022) ]]=v90[v92[3]][v92[4]];else local v310=0;local v311;local v312;while true do if (v310==0) then v311=v92[2];v312=v90[v92[12 -9 ]];v310=1;end if (v310==1) then v90[v311 + 1 ]=v312;v90[v311]=v312[v92[4]];break;end end end elseif (v93<=77) then if (v93<=75) then for v221=v92[2],v92[3] do v90[v221]=nil;end elseif (v93==76) then local v313=0;local v314;local v315;while true do if (1==v313) then for v444=v314 + (3 -2) ,v85 do v15(v315,v90[v444]);end break;end if (0==v313) then v314=v92[2 + 0 ];v315=v90[v314];v313=1;end end else local v316=0;local v317;while true do if (0==v316) then v317=v92[2];do return v90[v317](v21(v90,v317 + 1 ,v92[3]));end break;end end end elseif (v93<=78) then v90[v92[2]]= #v90[v92[3]];elseif (v93==79) then if (v90[v92[2]]==v92[4]) then v84=v84 + (3 -2) ;else v84=v92[3];end else v90[v92[2]][v92[3]]=v92[863 -(814 + 45) ];end elseif (v93<=86) then if (v93<=83) then if (v93<=81) then v90[v92[2]]=v90[v92[7 -4 ]]%v90[v92[1 + 3 ]] ;elseif (v93==82) then v90[v92[2]]=v76[v92[3]];else v90[v92[2]]=v90[v92[2 + 1 ]]%v90[v92[4]] ;end elseif (v93<=84) then v90[v92[2]][v90[v92[3]]]=v92[4];elseif (v93==(970 -(261 + 624))) then if v90[v92[2]] then v84=v84 + (1 -0) ;else v84=v92[3];end else local v323=v92[1082 -(1020 + 60) ];v90[v323](v21(v90,v323 + (1424 -(630 + 793)) ,v85));end elseif (v93<=89) then if (v93<=87) then local v201=0;local v202;local v203;local v204;while true do if (v201==1) then v204=v92[3];for v387=1,v204 do v203[v387]=v90[v202 + v387 ];end break;end if (v201==0) then v202=v92[6 -4 ];v203=v90[v202];v201=1;end end elseif (v93==88) then for v353=v92[2],v92[3] do v90[v353]=nil;end else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=(426 -336)) then v90[v92[2]]=v75[v92[3]];elseif (v93>91) then v90[v92[2]]=v76[v92[3]];else v90[v92[2]]=v90[v92[3]];end v84=v84 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
